// Generated from src/Tyson/Tyson.g4 by ANTLR 4.7.3-SNAPSHOT


import { ATN } from "antlr4ts/atn/ATN";
import { ATNDeserializer } from "antlr4ts/atn/ATNDeserializer";
import { CharStream } from "antlr4ts/CharStream";
import { Lexer } from "antlr4ts/Lexer";
import { LexerATNSimulator } from "antlr4ts/atn/LexerATNSimulator";
import { NotNull } from "antlr4ts/Decorators";
import { Override } from "antlr4ts/Decorators";
import { RuleContext } from "antlr4ts/RuleContext";
import { Vocabulary } from "antlr4ts/Vocabulary";
import { VocabularyImpl } from "antlr4ts/VocabularyImpl";

import * as Utils from "antlr4ts/misc/Utils";


export class TysonLexer extends Lexer {
	public static readonly T__0 = 1;
	public static readonly T__1 = 2;
	public static readonly T__2 = 3;
	public static readonly T__3 = 4;
	public static readonly T__4 = 5;
	public static readonly If = 6;
	public static readonly Else = 7;
	public static readonly Return = 8;
	public static readonly For = 9;
	public static readonly While = 10;
	public static readonly To = 11;
	public static readonly Do = 12;
	public static readonly In = 13;
	public static readonly Null = 14;
	public static readonly Or = 15;
	public static readonly And = 16;
	public static readonly Equals = 17;
	public static readonly NEquals = 18;
	public static readonly GTEquals = 19;
	public static readonly LTEquals = 20;
	public static readonly Pow = 21;
	public static readonly Excl = 22;
	public static readonly GT = 23;
	public static readonly LT = 24;
	public static readonly Add = 25;
	public static readonly Subtract = 26;
	public static readonly Multiply = 27;
	public static readonly Divide = 28;
	public static readonly Modulus = 29;
	public static readonly OBrace = 30;
	public static readonly CBrace = 31;
	public static readonly OBracket = 32;
	public static readonly CBracket = 33;
	public static readonly OParen = 34;
	public static readonly CParen = 35;
	public static readonly SColon = 36;
	public static readonly Assign = 37;
	public static readonly Comma = 38;
	public static readonly QMark = 39;
	public static readonly Colon = 40;
	public static readonly Bool = 41;
	public static readonly Number = 42;
	public static readonly Identifier = 43;
	public static readonly String = 44;
	public static readonly Comment = 45;
	public static readonly Space = 46;

	// tslint:disable:no-trailing-whitespace
	public static readonly channelNames: string[] = [
		"DEFAULT_TOKEN_CHANNEL", "HIDDEN",
	];

	// tslint:disable:no-trailing-whitespace
	public static readonly modeNames: string[] = [
		"DEFAULT_MODE",
	];

	public static readonly ruleNames: string[] = [
		"T__0", "T__1", "T__2", "T__3", "T__4", "If", "Else", "Return", "For", 
		"While", "To", "Do", "In", "Null", "Or", "And", "Equals", "NEquals", "GTEquals", 
		"LTEquals", "Pow", "Excl", "GT", "LT", "Add", "Subtract", "Multiply", 
		"Divide", "Modulus", "OBrace", "CBrace", "OBracket", "CBracket", "OParen", 
		"CParen", "SColon", "Assign", "Comma", "QMark", "Colon", "Bool", "Number", 
		"Identifier", "String", "Comment", "Space", "Int", "Digit",
	];

	private static readonly _LITERAL_NAMES: Array<string | undefined> = [
		undefined, "'+='", "'-='", "'/='", "'*='", "'^='", "'if'", "'else'", "'return'", 
		"'for'", "'while'", "'to'", "'do'", "'in'", "'null'", "'||'", "'&&'", 
		"'=='", "'!='", "'>='", "'<='", "'^'", "'!'", "'>'", "'<'", "'+'", "'-'", 
		"'*'", "'/'", "'%'", "'{'", "'}'", "'['", "']'", "'('", "')'", "';'", 
		"'='", "','", "'?'", "':'",
	];
	private static readonly _SYMBOLIC_NAMES: Array<string | undefined> = [
		undefined, undefined, undefined, undefined, undefined, undefined, "If", 
		"Else", "Return", "For", "While", "To", "Do", "In", "Null", "Or", "And", 
		"Equals", "NEquals", "GTEquals", "LTEquals", "Pow", "Excl", "GT", "LT", 
		"Add", "Subtract", "Multiply", "Divide", "Modulus", "OBrace", "CBrace", 
		"OBracket", "CBracket", "OParen", "CParen", "SColon", "Assign", "Comma", 
		"QMark", "Colon", "Bool", "Number", "Identifier", "String", "Comment", 
		"Space",
	];
	public static readonly VOCABULARY: Vocabulary = new VocabularyImpl(TysonLexer._LITERAL_NAMES, TysonLexer._SYMBOLIC_NAMES, []);

	// @Override
	// @NotNull
	public get vocabulary(): Vocabulary {
		return TysonLexer.VOCABULARY;
	}
	// tslint:enable:no-trailing-whitespace


	constructor(input: CharStream) {
		super(input);
		this._interp = new LexerATNSimulator(TysonLexer._ATN, this);
	}

	// @Override
	public get grammarFileName(): string { return "Tyson.g4"; }

	// @Override
	public get ruleNames(): string[] { return TysonLexer.ruleNames; }

	// @Override
	public get serializedATN(): string { return TysonLexer._serializedATN; }

	// @Override
	public get channelNames(): string[] { return TysonLexer.channelNames; }

	// @Override
	public get modeNames(): string[] { return TysonLexer.modeNames; }

	public static readonly _serializedATN: string =
		"\x03\uC91D\uCABA\u058D\uAFBA\u4F53\u0607\uEA8B\uC241\x020\u012D\b\x01" +
		"\x04\x02\t\x02\x04\x03\t\x03\x04\x04\t\x04\x04\x05\t\x05\x04\x06\t\x06" +
		"\x04\x07\t\x07\x04\b\t\b\x04\t\t\t\x04\n\t\n\x04\v\t\v\x04\f\t\f\x04\r" +
		"\t\r\x04\x0E\t\x0E\x04\x0F\t\x0F\x04\x10\t\x10\x04\x11\t\x11\x04\x12\t" +
		"\x12\x04\x13\t\x13\x04\x14\t\x14\x04\x15\t\x15\x04\x16\t\x16\x04\x17\t" +
		"\x17\x04\x18\t\x18\x04\x19\t\x19\x04\x1A\t\x1A\x04\x1B\t\x1B\x04\x1C\t" +
		"\x1C\x04\x1D\t\x1D\x04\x1E\t\x1E\x04\x1F\t\x1F\x04 \t \x04!\t!\x04\"\t" +
		"\"\x04#\t#\x04$\t$\x04%\t%\x04&\t&\x04\'\t\'\x04(\t(\x04)\t)\x04*\t*\x04" +
		"+\t+\x04,\t,\x04-\t-\x04.\t.\x04/\t/\x040\t0\x041\t1\x03\x02\x03\x02\x03" +
		"\x02\x03\x03\x03\x03\x03\x03\x03\x04\x03\x04\x03\x04\x03\x05\x03\x05\x03" +
		"\x05\x03\x06\x03\x06\x03\x06\x03\x07\x03\x07\x03\x07\x03\b\x03\b\x03\b" +
		"\x03\b\x03\b\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\t\x03\n\x03\n\x03" +
		"\n\x03\n\x03\v\x03\v\x03\v\x03\v\x03\v\x03\v\x03\f\x03\f\x03\f\x03\r\x03" +
		"\r\x03\r\x03\x0E\x03\x0E\x03\x0E\x03\x0F\x03\x0F\x03\x0F\x03\x0F\x03\x0F" +
		"\x03\x10\x03\x10\x03\x10\x03\x11\x03\x11\x03\x11\x03\x12\x03\x12\x03\x12" +
		"\x03\x13\x03\x13\x03\x13\x03\x14\x03\x14\x03\x14\x03\x15\x03\x15\x03\x15" +
		"\x03\x16\x03\x16\x03\x17\x03\x17\x03\x18\x03\x18\x03\x19\x03\x19\x03\x1A" +
		"\x03\x1A\x03\x1B\x03\x1B\x03\x1C\x03\x1C\x03\x1D\x03\x1D\x03\x1E\x03\x1E" +
		"\x03\x1F\x03\x1F\x03 \x03 \x03!\x03!\x03\"\x03\"\x03#\x03#\x03$\x03$\x03" +
		"%\x03%\x03&\x03&\x03\'\x03\'\x03(\x03(\x03)\x03)\x03*\x03*\x03*\x03*\x03" +
		"*\x03*\x03*\x03*\x03*\x05*\xDD\n*\x03+\x03+\x03+\x07+\xE2\n+\f+\x0E+\xE5" +
		"\v+\x05+\xE7\n+\x03,\x03,\x07,\xEB\n,\f,\x0E,\xEE\v,\x03-\x03-\x03-\x03" +
		"-\x07-\xF4\n-\f-\x0E-\xF7\v-\x03-\x03-\x03-\x03-\x03-\x07-\xFE\n-\f-\x0E" +
		"-\u0101\v-\x03-\x05-\u0104\n-\x03.\x03.\x03.\x03.\x07.\u010A\n.\f.\x0E" +
		".\u010D\v.\x03.\x03.\x03.\x03.\x07.\u0113\n.\f.\x0E.\u0116\v.\x03.\x03" +
		".\x05.\u011A\n.\x03.\x03.\x03/\x03/\x03/\x03/\x030\x030\x070\u0124\n0" +
		"\f0\x0E0\u0127\v0\x030\x050\u012A\n0\x031\x031\x03\u0114\x02\x022\x03" +
		"\x02\x03\x05\x02\x04\x07\x02\x05\t\x02\x06\v\x02\x07\r\x02\b\x0F\x02\t" +
		"\x11\x02\n\x13\x02\v\x15\x02\f\x17\x02\r\x19\x02\x0E\x1B\x02\x0F\x1D\x02" +
		"\x10\x1F\x02\x11!\x02\x12#\x02\x13%\x02\x14\'\x02\x15)\x02\x16+\x02\x17" +
		"-\x02\x18/\x02\x191\x02\x1A3\x02\x1B5\x02\x1C7\x02\x1D9\x02\x1E;\x02\x1F" +
		"=\x02 ?\x02!A\x02\"C\x02#E\x02$G\x02%I\x02&K\x02\'M\x02(O\x02)Q\x02*S" +
		"\x02+U\x02,W\x02-Y\x02.[\x02/]\x020_\x02\x02a\x02\x02\x03\x02\f\x05\x02" +
		"C\\aac|\x06\x022;C\\aac|\x03\x02$$\x06\x02\f\f\x0F\x0F$$^^\x04\x02\f\f" +
		"\x0F\x0F\x03\x02))\x06\x02\f\f\x0F\x0F))^^\x05\x02\v\f\x0E\x0F\"\"\x03" +
		"\x023;\x03\x022;\x02\u0138\x02\x03\x03\x02\x02\x02\x02\x05\x03\x02\x02" +
		"\x02\x02\x07\x03\x02\x02\x02\x02\t\x03\x02\x02\x02\x02\v\x03\x02\x02\x02" +
		"\x02\r\x03\x02\x02\x02\x02\x0F\x03\x02\x02\x02\x02\x11\x03\x02\x02\x02" +
		"\x02\x13\x03\x02\x02\x02\x02\x15\x03\x02\x02\x02\x02\x17\x03\x02\x02\x02" +
		"\x02\x19\x03\x02\x02\x02\x02\x1B\x03\x02\x02\x02\x02\x1D\x03\x02\x02\x02" +
		"\x02\x1F\x03\x02\x02\x02\x02!\x03\x02\x02\x02\x02#\x03\x02\x02\x02\x02" +
		"%\x03\x02\x02\x02\x02\'\x03\x02\x02\x02\x02)\x03\x02\x02\x02\x02+\x03" +
		"\x02\x02\x02\x02-\x03\x02\x02\x02\x02/\x03\x02\x02\x02\x021\x03\x02\x02" +
		"\x02\x023\x03\x02\x02\x02\x025\x03\x02\x02\x02\x027\x03\x02\x02\x02\x02" +
		"9\x03\x02\x02\x02\x02;\x03\x02\x02\x02\x02=\x03\x02\x02\x02\x02?\x03\x02" +
		"\x02\x02\x02A\x03\x02\x02\x02\x02C\x03\x02\x02\x02\x02E\x03\x02\x02\x02" +
		"\x02G\x03\x02\x02\x02\x02I\x03\x02\x02\x02\x02K\x03\x02\x02\x02\x02M\x03" +
		"\x02\x02\x02\x02O\x03\x02\x02\x02\x02Q\x03\x02\x02\x02\x02S\x03\x02\x02" +
		"\x02\x02U\x03\x02\x02\x02\x02W\x03\x02\x02\x02\x02Y\x03\x02\x02\x02\x02" +
		"[\x03\x02\x02\x02\x02]\x03\x02\x02\x02\x03c\x03\x02\x02\x02\x05f\x03\x02" +
		"\x02\x02\x07i\x03\x02\x02\x02\tl\x03\x02\x02\x02\vo\x03\x02\x02\x02\r" +
		"r\x03\x02\x02\x02\x0Fu\x03\x02\x02\x02\x11z\x03\x02\x02\x02\x13\x81\x03" +
		"\x02\x02\x02\x15\x85\x03\x02\x02\x02\x17\x8B\x03\x02\x02\x02\x19\x8E\x03" +
		"\x02\x02\x02\x1B\x91\x03\x02\x02\x02\x1D\x94\x03\x02\x02\x02\x1F\x99\x03" +
		"\x02\x02\x02!\x9C\x03\x02\x02\x02#\x9F\x03\x02\x02\x02%\xA2\x03\x02\x02" +
		"\x02\'\xA5\x03\x02\x02\x02)\xA8\x03\x02\x02\x02+\xAB\x03\x02\x02\x02-" +
		"\xAD\x03\x02\x02\x02/\xAF\x03\x02\x02\x021\xB1\x03\x02\x02\x023\xB3\x03" +
		"\x02\x02\x025\xB5\x03\x02\x02\x027\xB7\x03\x02\x02\x029\xB9\x03\x02\x02" +
		"\x02;\xBB\x03\x02\x02\x02=\xBD\x03\x02\x02\x02?\xBF\x03\x02\x02\x02A\xC1" +
		"\x03\x02\x02\x02C\xC3\x03\x02\x02\x02E\xC5\x03\x02\x02\x02G\xC7\x03\x02" +
		"\x02\x02I\xC9\x03\x02\x02\x02K\xCB\x03\x02\x02\x02M\xCD\x03\x02\x02\x02" +
		"O\xCF\x03\x02\x02\x02Q\xD1\x03\x02\x02\x02S\xDC\x03\x02\x02\x02U\xDE\x03" +
		"\x02\x02\x02W\xE8\x03\x02\x02\x02Y\u0103\x03\x02\x02\x02[\u0119\x03\x02" +
		"\x02\x02]\u011D\x03\x02\x02\x02_\u0129\x03\x02\x02\x02a\u012B\x03\x02" +
		"\x02\x02cd\x07-\x02\x02de\x07?\x02\x02e\x04\x03\x02\x02\x02fg\x07/\x02" +
		"\x02gh\x07?\x02\x02h\x06\x03\x02\x02\x02ij\x071\x02\x02jk\x07?\x02\x02" +
		"k\b\x03\x02\x02\x02lm\x07,\x02\x02mn\x07?\x02\x02n\n\x03\x02\x02\x02o" +
		"p\x07`\x02\x02pq\x07?\x02\x02q\f\x03\x02\x02\x02rs\x07k\x02\x02st\x07" +
		"h\x02\x02t\x0E\x03\x02\x02\x02uv\x07g\x02\x02vw\x07n\x02\x02wx\x07u\x02" +
		"\x02xy\x07g\x02\x02y\x10\x03\x02\x02\x02z{\x07t\x02\x02{|\x07g\x02\x02" +
		"|}\x07v\x02\x02}~\x07w\x02\x02~\x7F\x07t\x02\x02\x7F\x80\x07p\x02\x02" +
		"\x80\x12\x03\x02\x02\x02\x81\x82\x07h\x02\x02\x82\x83\x07q\x02\x02\x83" +
		"\x84\x07t\x02\x02\x84\x14\x03\x02\x02\x02\x85\x86\x07y\x02\x02\x86\x87" +
		"\x07j\x02\x02\x87\x88\x07k\x02\x02\x88\x89\x07n\x02\x02\x89\x8A\x07g\x02" +
		"\x02\x8A\x16\x03\x02\x02\x02\x8B\x8C\x07v\x02\x02\x8C\x8D\x07q\x02\x02" +
		"\x8D\x18\x03\x02\x02\x02\x8E\x8F\x07f\x02\x02\x8F\x90\x07q\x02\x02\x90" +
		"\x1A\x03\x02\x02\x02\x91\x92\x07k\x02\x02\x92\x93\x07p\x02\x02\x93\x1C" +
		"\x03\x02\x02\x02\x94\x95\x07p\x02\x02\x95\x96\x07w\x02\x02\x96\x97\x07" +
		"n\x02\x02\x97\x98\x07n\x02\x02\x98\x1E\x03\x02\x02\x02\x99\x9A\x07~\x02" +
		"\x02\x9A\x9B\x07~\x02\x02\x9B \x03\x02\x02\x02\x9C\x9D\x07(\x02\x02\x9D" +
		"\x9E\x07(\x02\x02\x9E\"\x03\x02\x02\x02\x9F\xA0\x07?\x02\x02\xA0\xA1\x07" +
		"?\x02\x02\xA1$\x03\x02\x02\x02\xA2\xA3\x07#\x02\x02\xA3\xA4\x07?\x02\x02" +
		"\xA4&\x03\x02\x02\x02\xA5\xA6\x07@\x02\x02\xA6\xA7\x07?\x02\x02\xA7(\x03" +
		"\x02\x02\x02\xA8\xA9\x07>\x02\x02\xA9\xAA\x07?\x02\x02\xAA*\x03\x02\x02" +
		"\x02\xAB\xAC\x07`\x02\x02\xAC,\x03\x02\x02\x02\xAD\xAE\x07#\x02\x02\xAE" +
		".\x03\x02\x02\x02\xAF\xB0\x07@\x02\x02\xB00\x03\x02\x02\x02\xB1\xB2\x07" +
		">\x02\x02\xB22\x03\x02\x02\x02\xB3\xB4\x07-\x02\x02\xB44\x03\x02\x02\x02" +
		"\xB5\xB6\x07/\x02\x02\xB66\x03\x02\x02\x02\xB7\xB8\x07,\x02\x02\xB88\x03" +
		"\x02\x02\x02\xB9\xBA\x071\x02\x02\xBA:\x03\x02\x02\x02\xBB\xBC\x07\'\x02" +
		"\x02\xBC<\x03\x02\x02\x02\xBD\xBE\x07}\x02\x02\xBE>\x03\x02\x02\x02\xBF" +
		"\xC0\x07\x7F\x02\x02\xC0@\x03\x02\x02\x02\xC1\xC2\x07]\x02\x02\xC2B\x03" +
		"\x02\x02\x02\xC3\xC4\x07_\x02\x02\xC4D\x03\x02\x02\x02\xC5\xC6\x07*\x02" +
		"\x02\xC6F\x03\x02\x02\x02\xC7\xC8\x07+\x02\x02\xC8H\x03\x02\x02\x02\xC9" +
		"\xCA\x07=\x02\x02\xCAJ\x03\x02\x02\x02\xCB\xCC\x07?\x02\x02\xCCL\x03\x02" +
		"\x02\x02\xCD\xCE\x07.\x02\x02\xCEN\x03\x02\x02\x02\xCF\xD0\x07A\x02\x02" +
		"\xD0P\x03\x02\x02\x02\xD1\xD2\x07<\x02\x02\xD2R\x03\x02\x02\x02\xD3\xD4" +
		"\x07v\x02\x02\xD4\xD5\x07t\x02\x02\xD5\xD6\x07w\x02\x02\xD6\xDD\x07g\x02" +
		"\x02\xD7\xD8\x07h\x02\x02\xD8\xD9\x07c\x02\x02\xD9\xDA\x07n\x02\x02\xDA" +
		"\xDB\x07u\x02\x02\xDB\xDD\x07g\x02\x02\xDC\xD3\x03\x02\x02\x02\xDC\xD7" +
		"\x03\x02\x02\x02\xDDT\x03\x02\x02\x02\xDE\xE6\x05_0\x02\xDF\xE3\x070\x02" +
		"\x02\xE0\xE2\x05a1\x02\xE1\xE0\x03\x02\x02\x02\xE2\xE5\x03\x02\x02\x02" +
		"\xE3\xE1\x03\x02\x02\x02\xE3\xE4\x03\x02\x02\x02\xE4\xE7\x03\x02\x02\x02" +
		"\xE5\xE3\x03\x02\x02\x02\xE6\xDF\x03\x02\x02\x02\xE6\xE7\x03\x02\x02\x02" +
		"\xE7V\x03\x02\x02\x02\xE8\xEC\t\x02\x02\x02\xE9\xEB\t\x03\x02\x02\xEA" +
		"\xE9\x03\x02\x02\x02\xEB\xEE\x03\x02\x02\x02\xEC\xEA\x03\x02\x02\x02\xEC" +
		"\xED\x03\x02\x02\x02\xEDX\x03\x02\x02\x02\xEE\xEC\x03\x02\x02\x02\xEF" +
		"\xF5\t\x04\x02\x02\xF0\xF4\n\x05\x02\x02\xF1\xF2\x07^\x02\x02\xF2\xF4" +
		"\n\x06\x02\x02\xF3\xF0\x03\x02\x02\x02\xF3\xF1\x03\x02\x02\x02\xF4\xF7" +
		"\x03\x02\x02\x02\xF5\xF3\x03\x02\x02\x02\xF5\xF6\x03\x02\x02\x02\xF6\xF8" +
		"\x03\x02\x02\x02\xF7\xF5\x03\x02\x02\x02\xF8\u0104\t\x04\x02\x02\xF9\xFF" +
		"\t\x07\x02\x02\xFA\xFE\n\b\x02\x02\xFB\xFC\x07^\x02\x02\xFC\xFE\n\x06" +
		"\x02\x02\xFD\xFA\x03\x02\x02\x02\xFD\xFB\x03\x02\x02\x02\xFE\u0101\x03" +
		"\x02\x02\x02\xFF\xFD\x03\x02\x02\x02\xFF\u0100\x03\x02\x02\x02\u0100\u0102" +
		"\x03\x02\x02\x02\u0101\xFF\x03\x02\x02\x02\u0102\u0104\t\x07\x02\x02\u0103" +
		"\xEF\x03\x02\x02\x02\u0103\xF9\x03\x02\x02\x02\u0104Z\x03\x02\x02\x02" +
		"\u0105\u0106\x071\x02\x02\u0106\u0107\x071\x02\x02\u0107\u010B\x03\x02" +
		"\x02\x02\u0108\u010A\n\x06\x02\x02\u0109\u0108\x03\x02\x02\x02\u010A\u010D" +
		"\x03\x02\x02\x02\u010B\u0109\x03\x02\x02\x02\u010B\u010C\x03\x02\x02\x02" +
		"\u010C\u011A\x03\x02\x02\x02\u010D\u010B\x03\x02\x02\x02\u010E\u010F\x07" +
		"1\x02\x02\u010F\u0110\x07,\x02\x02\u0110\u0114\x03\x02\x02\x02\u0111\u0113" +
		"\v\x02\x02\x02\u0112\u0111\x03\x02\x02\x02\u0113\u0116\x03\x02\x02\x02" +
		"\u0114\u0115\x03\x02\x02\x02\u0114\u0112\x03\x02\x02\x02\u0115\u0117\x03" +
		"\x02\x02\x02\u0116\u0114\x03\x02\x02\x02\u0117\u0118\x07,\x02\x02\u0118" +
		"\u011A\x071\x02\x02\u0119\u0105\x03\x02\x02\x02\u0119\u010E\x03\x02\x02" +
		"\x02\u011A\u011B\x03\x02\x02\x02\u011B\u011C\b.\x02\x02\u011C\\\x03\x02" +
		"\x02\x02\u011D\u011E\t\t\x02\x02\u011E\u011F\x03\x02\x02\x02\u011F\u0120" +
		"\b/\x02\x02\u0120^\x03\x02\x02\x02\u0121\u0125\t\n\x02\x02\u0122\u0124" +
		"\x05a1\x02\u0123\u0122\x03\x02\x02\x02\u0124\u0127\x03\x02\x02\x02\u0125" +
		"\u0123\x03\x02\x02\x02\u0125\u0126\x03\x02\x02\x02\u0126\u012A\x03\x02" +
		"\x02\x02\u0127\u0125\x03\x02\x02\x02\u0128\u012A\x072\x02\x02\u0129\u0121" +
		"\x03\x02\x02\x02\u0129\u0128\x03\x02\x02\x02\u012A`\x03\x02\x02\x02\u012B" +
		"\u012C\t\v\x02\x02\u012Cb\x03\x02\x02\x02\x11\x02\xDC\xE3\xE6\xEC\xF3" +
		"\xF5\xFD\xFF\u0103\u010B\u0114\u0119\u0125\u0129\x03\b\x02\x02";
	public static __ATN: ATN;
	public static get _ATN(): ATN {
		if (!TysonLexer.__ATN) {
			TysonLexer.__ATN = new ATNDeserializer().deserialize(Utils.toCharArray(TysonLexer._serializedATN));
		}

		return TysonLexer.__ATN;
	}

}

